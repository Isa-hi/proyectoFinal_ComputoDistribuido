<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SocketChat</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">

    <script type="module">
        // Importamos la librería de socket.io
        import { io } from "https://cdn.socket.io/4.7.5/socket.io.esm.min.js";
        const socket = io('http://localhost:4000'); // Socket.io se conecta al servidor del chat

        const form = document.getElementById('form')
        const input = document.getElementById('input')
        const messages = document.getElementById('messages')
        
        socket.on('chat message', (msgObj) => { //Se llama cada vez que se recibe un mensaje
            console.log("Client side: ", msgObj);
            const item = document.createElement('div');
            item.className = 'fluid-container bg-primary';

            const userName = document.createElement('p');
            userName.textContent = msgObj.user_name;
            item.appendChild(userName);

            const messageContainer = document.createElement('div');
            messageContainer.className = 'fluid-container';

            const message = document.createElement('p');
            message.textContent = msgObj.message;

            messageContainer.appendChild(message);
            
            // Create a new 'a' element for the "View file" button
            const viewFileButton = document.createElement('a');
            // Set the href attribute to the URL of the file
            viewFileButton.href = '/view/' + msgObj.file_path;
            // Set the target attribute to '_blank' to open the file in a new tab
            viewFileButton.target = '_blank';
            // Set the text of the button
            viewFileButton.textContent = 'View file';
            // Append the button to the message container
            messageContainer.appendChild(viewFileButton);

            item.appendChild(messageContainer);

            messages.insertAdjacentElement('beforeend', item);
        });

        form.addEventListener('submit', async function(e) {
            e.preventDefault();
            if (input.value) {
                const formData = new FormData();
                formData.append('file', document.getElementById('file').files[0]);
                // Upload the file to the server
                const response = await fetch('http://localhost:4000/upload', {
                    method: 'POST',
                    body: formData
                });
                // Get the file's ID from the response
                const { fileId } = await response.json();
                // Emit the 'chat message' event with the file's ID
                socket.emit('chat message', {'message': input.value, 'user_name': '<%= locals.user_name %>', 'fileId': fileId, 'file_path': document.getElementById('file').files[0].name});
                input.value = '';
                //Reset the file input
                document.getElementById('file').value = '';
            }
        });
    </script>
</head>
<body>
    <div class="fluid-container d-flex justify-content-center">
        <div class="col-6">
            <h2>Chat</h2>
            <div id="messages">

            <% if(locals.messages) {%>
                <% locals.messages.forEach(function(msgObj) { %>
                    <div class="col-10 message-container">
                        <p><%= msgObj.user_name %></p>
                        <div class="fluid-container">
                            <p><%= msgObj.message %></p>
                            <% if(msgObj.file_id) { %>
                                <a href="/view/<%= msgObj.file_path %>" target="_blank">View file</a>                           
                            <% } %>
                        </div>
                    </div>
                <% }); %>
            <% } %>
    
            <!-- Aquí mete los mensajes del chat -->
            </div>
    
        <form id="form" action="">
            <input type="file" id="file" accept=".dox, .pdf">
            <input id="input" autocomplete="off" />
            <button type="submit">Send</button>
        </form>
        </div>
    </div>
</body>
</html>